version: '3.8'

services:
  # RabbitMQ Service
  rabbitmq:
    image: "rabbitmq:3"  # Default RabbitMQ image without management plugin
    networks:
      - mynetwork
    restart: always

  # MongoDB Service for Booking DB
  bookingdb:
    image: "mongo:6"  # MongoDB for booking database
    volumes:
      - bookingdata:/data/db
    networks:
      - mynetwork

  # MongoDB for Patient DB
  patientdb:
    image: "mongo:6"  # MongoDB for patient database
    volumes:
      - patientdata:/data/db
    networks:
      - mynetwork

  # MongoDB for Dentist DB
  dentistdb:
    image: "mongo:6"  # MongoDB for dentist database
    volumes:
      - dentistdata:/data/db
    networks:
      - mynetwork

  # Timeslot Service
  timeslot:
    build:
      context: ./coreServices/TimeslotsService  # Link to the Timeslot service Dockerfile
    depends_on:
      - rabbitmq
      - bookingdb
    environment:
      - BOOKING_DB_URI=mongodb://bookingdb:27017/booking-database
    networks:
      - mynetwork

  # Office Service
  office:
    build:
      context: ./coreServices/OfficesService  # Link to the Office service Dockerfile
    depends_on:
      - rabbitmq
      - bookingdb
    environment:
      - BOOKING_DB_URI=mongodb://bookingdb:27017/booking-database
    networks:
      - mynetwork

  # User Management Service
  usermanagement:
    build:
      context: ./coreServices/userManagementService  # Link to the User Management service Dockerfile
    depends_on:
      - rabbitmq
      - patientdb
      - dentistdb
    ports:
      - "3004:3004"
    environment:
      - PATIENT_DB_URI=mongodb://patientdb:27017/patient-database
      - DENTIST_DB_URI=mongodb://dentistdb:27017/dentist-database
    networks:
      - mynetwork

  # API Gateway Service
  apigate:
    build:
      context: ./APIGateway  # Link to the API Gateway Dockerfile
    depends_on:
      - rabbitmq
    ports:
    - "4000:4000"
    networks:
      - mynetwork

  # Client Service
  client:
    build:
      context: ./client  # Link to the Client Dockerfile
    ports:
      - "5173:5173"
    networks:
      - mynetwork

# Define the networks
networks:
  mynetwork:
    external: true  # Use the existing 'mynetwork' Docker network

# Define the volumes
volumes:
  patientdata:
  dentistdata:
  bookingdata: