services:
  # RabbitMQ Service with Health Check
  rabbitmq:
    image: "rabbitmq:3"
    networks:
      - mynetwork
    restart: always
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 20s

  # MongoDB Service for Booking DB
  bookingdb:
    image: "mongo:6"
    volumes:
      - bookingdata:/data/db
    networks:
      - mynetwork

  # MongoDB for Patient DB
  patientdb:
    image: "mongo:6"
    volumes:
      - patientdata:/data/db
    networks:
      - mynetwork

  # MongoDB for Dentist DB
  dentistdb:
    image: "mongo:6"
    volumes:
      - dentistdata:/data/db
    networks:
      - mynetwork

  # Timeslot Service
  timeslot:
    build:
      context: ./coreServices/TimeslotsService
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait until RabbitMQ is healthy
      bookingdb:
        condition: service_started # Wait until the database is started
    ports:
      - "3003:3003"
    environment:
      - BOOKING_DB_URI=mongodb://bookingdb:27017/booking-database
    networks:
      - mynetwork
    develop:
      watch:
        - path: ./coreServices/TimeslotsService/package.json
          action: rebuild
        - path: ./coreServices/TimeslotsService
          target: /app
          action: rebuild
          ignore:
            - node_modules/
        - path: ./coreServices/TimeslotsService
          target: /app
          action: sync+restart
          ignore:
            - node_modules/

  # Office Service
  office:
    build:
      context: ./coreServices/OfficesService
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait until RabbitMQ is healthy
      bookingdb:
        condition: service_started # Wait until the database is started
    ports:
      - "3005:3005"
    environment:
      - BOOKING_DB_URI=mongodb://bookingdb:27017/booking-database
    networks:
      - mynetwork
    develop:
      watch:
        - path: ./coreServices/OfficesService/package.json
          action: rebuild
        - path: ./coreServices/OfficesService
          target: /app
          action: rebuild
          ignore:
            - node_modules/
        - path: ./coreServices/OfficesService
          target: /app
          action: sync+restart
          ignore:
            - node_modules/

  # User Management Service
  usermanagement:
    build:
      context: ./coreServices/userManagementService
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait until RabbitMQ is healthy
      patientdb:
        condition: service_started # Wait until the patient DB is started
      dentistdb:
        condition: service_started # Wait until the dentist DB is started
    ports:
      - "3004:3004"
    environment:
      - PATIENT_DB_URI=mongodb://patientdb:27017/patient-database
      - DENTIST_DB_URI=mongodb://dentistdb:27017/dentist-database
    networks:
      - mynetwork
    develop:
      watch:
        - path: ./coreServices/userManagementService/package.json
          action: rebuild
        - path: ./coreServices/userManagementService
          target: /app
          action: rebuild
          ignore:
            - node_modules/
        - path: ./coreServices/userManagementService
          target: /app
          action: sync+restart
          ignore:
            - node_modules/
          

  # Client Service
  client:
    build:
      context: ./client
    ports:
      - "5173:5173"
    networks:
      - mynetwork
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
        - path: ./client
          target: /app
          action: rebuild
          ignore:
          - node_modules
        - path: ./client
          target: /app
          action: sync+restart

  # API Gateway Service
  apigate:
    build:
      context: ./APIGateway
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "4000:4000"
    networks:
      - mynetwork
    develop:
      watch:
        - path: ./APIGateway/package.json
          action: rebuild
        - path: ./APIGateway
          target: /app
          action: rebuild
          ignore:
            - node_modules
        - path: ./APIGateway
          target: /app
          action: sync+restart
          ignore:
            - node_modules

networks:
  mynetwork:
    external: true

volumes:
  patientdata:
  dentistdata:
  bookingdata: